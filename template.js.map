{"version":3,"sources":["template.module.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,IAAM,WAAW,SAAS,QAAT,GAAoB;AACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,CAjED;;AAmEA,OAAO,OAAP,GAAiB,QAAjB","file":"template.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@submodule-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-submodule-license\n\n\t@submodule-configuration:\n\t\t{\n\t\t\t\"package\": \"diatom\",\n\t\t\t\"path\": \"diatom/template.module.js\",\n\t\t\t\"file\": \"template.module.js\",\n\t\t\t\"module\": \"diatom\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"https://github.com/volkovasystems/diatom.git\",\n\t\t\t\"test\": \"diatom-test.js\",\n\t\t\t\"internal\": true\n\t\t}\n\t@end-submodule-configuration\n\n\t@submodule-documentation:\n\t\tBlueprint template\n\t@end-submodule-documentation\n\n\t@note:\n\t\tDo not edit this unless you know what you're doing.\n\n\t\tThis blueprint template is intended to support previous versions of javascript.\n\n\t\tDo not incorporate any third party or any dependency modules to this template.\n\n\t\tDo not add newer versions of syntaxes without consulting to the main author.\n\t@end-note\n*/\n\nconst template = function template( ){\n\treturn `\n\t\tfunction {{{ name }}}( {{{ parameter }}} ){\n\t\t\ttry{\n\t\t\t\tvar parameter = Array.from( arguments );\n\n\t\t\t\tvar template = \"( function evaluate( ){ var result = undefined; @body return result; } ).bind( @bind )( )\"\n\t\t\t\t\t.replace( \"@bind\", \"( typeof global != 'undefined' )? global : ( typeof window != 'undefined' )? window : this\" )\n\t\t\t\t\t.replace( \"@body\", \"try{ result = ( @expression ); }catch( error ){ @error }\" )\n\t\t\t\t\t.replace( \"@error\", \"throw new Error( 'error executing expression, ' + error.stack );\" );\n\n\t\t\t\tif( this instanceof {{{ name }}} && parameter.length ){\n\t\t\t\t\tif( typeof this.initialize == \"function\" ){\n\t\t\t\t\t\tthis.initialize.apply( this, parameter );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}else if( this instanceof {{{ name }}} && !parameter.length ){\n\t\t\t\t\tif( typeof this.initialize == \"function\" ){\n\t\t\t\t\t\tthis.initialize( );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}else if( !( this instanceof {{{ name }}} ) && parameter.length ){\n\t\t\t\t\tvar variable = \"{{{ parameter }}}\".split( \",\" );\n\t\t\t\t\tvar initialize = {{{ name }}}.prototype.initialize;\n\t\t\t\t\tif( typeof initialize == \"function\" ){\n\t\t\t\t\t\tvar pattern = /^function\\\\s+[a-zA-Z0-9\\\\_\\\\$]+\\\\s*\\\\(\\\\s*([a-zA-Z0-9\\\\_\\\\$\\\\s\\\\,]+?)\\\\s*\\\\)/;\n\n\t\t\t\t\t\tvar argument = ( ( initialize.toString( )\n\t\t\t\t\t\t\t.match( pattern ) || [ ] )[ 1 ] || \"\" )\n\t\t\t\t\t\t\t.split( /\\\\,\\\\s*/ )\n\t\t\t\t\t\t\t.map( ( variable ) => { return variable.trim( ); } )\n\t\t\t\t\t\t\t.filter( ( variable ) => { return !!variable; } );\n\n\t\t\t\t\t\tif( argument.length > 0 ){\n\t\t\t\t\t\t\tvariable = argument;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar expression = \"function delegate( @parameter ){ return new this( @parameter ); }\"\n\t\t\t\t\t\t.replace( /\\@parameter/g,\n\t\t\t\t\t\t\tparameter.map( function onEachParameter( item, index ){\n\t\t\t\t\t\t\t\treturn variable[ index ] || \"abcdefghijklmnopqrstuvwxyz\"[ index ];\n\t\t\t\t\t\t\t} ).join( \",\" ) );\n\n\t\t\t\t\texpression = template.replace( \"@expression\", expression );\n\n\t\t\t\t\treturn eval( expression ).apply( {{{ name }}}, parameter );\n\n\t\t\t\t}else{\n\t\t\t\t\tvar expression = \"function delegate( ){ return new this( ); }\";\n\n\t\t\t\t\texpression = template.replace( \"@expression\", expression );\n\n\t\t\t\t\treturn eval( expression ).call( {{{ name }}} );\n\t\t\t\t}\n\n\t\t\t}catch( error ){\n\t\t\t\tthrow new Error( \"error creating instance of {{{ name }}}, \" + error.stack );\n\t\t\t}\n\t\t};\n\t`;\n};\n\nmodule.exports = template;\n"]}